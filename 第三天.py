# # 输入   目前是报错的状态
# str1 = input("输入的是")
# print(str1)


# 读 写文件
'''
open(filename, mode)
filename：包含了你要访问的文件名称的字符串值。
mode：决定了打开文件的模式：只读，写入，追加等。所有可取值见如下的完全列表。这个参数是非强制的，默认文件访问模式为只读(r)。
模式    描述
r	    以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。
rb	    以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。
r+	    打开一个文件用于读写。文件指针将会放在文件的开头。
rb+	    以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。
w	    打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
wb	    以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
w+	    打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
wb+	    以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
a	    打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。
ab	    以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。
a+	    打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。
ab+	    以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。

'''

# 测试read
# f = open("/Python基础学习/测试文件.txt","r")
# str = f.read()
# print(str)


# 测试write  不过 写会把文件之前的内容覆盖掉
# f = open("/Python基础学习/测试文件.txt", "w")
# f.write( "Python 是一个非常好的语言。\n是的，的确非常好!!\n" )
# # 关闭打开的文件
# f.close()

# f = open("/Python基础学习/测试文件.txt","r")
# str = f.read()
# print(str)

'''
f = open("/Python基础学习/测试文件.txt","r")
str1 = f.readline()
print(str1)
str = f.readlines()
print(str)
'''
# Python 是一个非常好的语言。
# ['是的，的确非常好!!\n']
'''
t = open("/Python基础学习/测试文件.txt","w")
num = t.write("测试测试写的功能！")
print(num)

t.close()
'''
# 局部变量和全局变量
# total = 0

# def sum(a,b):
#     total = a + b
#     print("函数内的局部变量：",total)
#     return total
# sum(1,2)

# print("函数外的全局变量：",total)



# 内部作用域修改外部作用域的变量时  使用global 和 nonlocal关键字
# total = 0

# def sum(a,b):
#     global total   #内部修改外部变量
#     total = a + b
#     print("函数内的局部变量：",total)
#     return total
# sum(1,2)

# print("函数外的全局变量：",total)

# a = 10

# def hanshu1():
#     a = 11
#     def hanshu2():
#         nonlocal a 
#         a = 12
#         print(a)
#     hanshu2()
#     print(a)
# hanshu1()   #  调用hanshu1-->hanshu2-->输出12-->输出12


# 特别注意python中的缩进，很多不起眼的错误都是缩进造成的
import os,glob
os.getcwd()
glob.glob('*.py')


